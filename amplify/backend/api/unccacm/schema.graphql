type Problem @model @auth(rules: [{ allow: public, operations: [read] }]) {
  id: ID!
  name: String!
  link: String!
  tags: [Tag!]!
  website: Website!
  difficulty: Int!
  solutions: [Solution] @connection(keyName: "byProblem", fields: ["id"])
}

enum Tag {
  String
  Tree
  Dynamic_Programming
  Array
  Recursion
  Greedy
  Search
  Graph
  Stack
  Hash_Table
  Linked_List
  Sliding_Window
  Trie
  Two_Pointers
  Queue
  Backtracking
  Sort
  Heap
}

enum Website {
  Leetcode
  Kattis
  HackerRank
}

type Solution
  @model
  @key(name: "byProblem", fields: ["problemID"])
  @auth(rules: [{ allow: public, operations: [read] }]) {
  id: ID!
  language: Language!
  code: String!
  owner: String!
  problemID: ID!
  problem: Problem @connection(fields: ["problemID"])
}

enum Language {
  Csharp
  C
  Cpp
  Java
  Python
  JavaScript
  Go
  Kotlin
  Ruby
  Haskell
  Rust
  Swift
  Scala
  PHP
}
